name: Deploy to Google Compute Engine

on:
  push:
    branches: [ master, main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  COMPUTE_ZONE: ${{ secrets.GCP_COMPUTE_ZONE }}
  COMPUTE_INSTANCE: ${{ secrets.GCP_COMPUTE_INSTANCE }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Configure Google Cloud credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Create deployment package
      run: |
        # Create deployment directory
        mkdir -p deployment
        cp -r pyobserver deployment/
        cp pyproject.toml deployment/
        cp requirements.txt deployment/
        cp -r scripts deployment/
        
        # Create logs directory
        mkdir -p deployment/logs
        
        # Ensure scripts are executable
        chmod +x deployment/scripts/startup.sh

      - name: Deploy to Compute Engine
        env:
          INSTANCE_NAME: ${{ secrets.GCE_INSTANCE }}
          ZONE: ${{ secrets.GCE_ZONE }}
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          USER_NAME: ${{ secrets.GCE_USER_NAME }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          gcloud compute ssh ${USER_NAME}@${INSTANCE_NAME} \
            --zone=${ZONE} \
            --project=${PROJECT_ID} \
            --command="cd ~/flyxiv_observer_v1 && echo 'DISCORD_TOKEN=${DISCORD_TOKEN}' > .env && echo 'GEMINI_API_KEY=${GEMINI_API_KEY}' >> .env && git pull origin master && . venv/bin/activate && pip install -e . && python -m pyobserver.main"
